apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-apps-ingress
  namespace: {{ .Values.namespace }}
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/proxy-buffers: "4 256k"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://auth.local:443, https://auth.local, https://logi.local:443, https://logi.local"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - auth.local
      - logi.local
      secretName: dev-ingress-secret
  rules:
  - host: {{ .Values.ingressHost }}
    http:
      paths:
      # handle requests that need keycloak auth
      - backend:
          service:
            name: {{ .Values.services.middleware.name }}
            port:
              # TargetPort is the same as APP_BIND_PORT, the port on which the
              # service will send requests to, that your pod will be listening on.
              number: {{ .Values.services.middleware.serviceTargetPort }}
        # matches MIDDLEWARE_URL_PATTERN in vertx deployment
        path: /middleware
        pathType: Prefix
  # Access to keycloak application
  - host: auth.local
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: keycloak-svc
              port:
                number: 8080
